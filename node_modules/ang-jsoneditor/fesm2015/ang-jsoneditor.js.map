{"version":3,"file":"ang-jsoneditor.js.map","sources":["ng://ang-jsoneditor/jsoneditor/jsoneditor.component.ts","ng://ang-jsoneditor/lib.module.ts"],"sourcesContent":["import {\n  Component, ElementRef, Input, OnInit, ViewChild\n} from '@angular/core';\nimport * as editor from 'jsoneditor';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'json-editor',\n  template: '<div [id]=\"id\" #jsonEditorContainer></div>'\n})\n\nexport class JsonEditorComponent implements OnInit {\n  private editor: any;\n  public id = 'angjsoneditor' + Math.floor(Math.random() * 1000000);\n  public optionsChanged = false;\n\n  @ViewChild('jsonEditorContainer') jsonEditorContainer: ElementRef;\n\n  private _data: Object = {};\n\n  @Input() options: JsonEditorOptions = new JsonEditorOptions();\n  @Input('data')\n  set data(value: Object) {\n    this._data = value;\n    if (this.editor) {\n      this.editor.destroy();\n      this.ngOnInit();\n    }\n  }\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    let optionsBefore = this.options;\n    if (!this.optionsChanged && this.editor) {\n      optionsBefore = this.editor.options;\n    }\n    this.editor = new editor(this.jsonEditorContainer.nativeElement, optionsBefore, this._data);\n  }\n\n  public collapseAll() {\n    this.editor.collapseAll();\n  }\n\n  public expandAll() {\n    this.editor.expandAll();\n  }\n\n  public focus() {\n    this.editor.focus();\n  }\n\n  public get(): JSON {\n    return this.editor.get();\n  }\n\n  public getMode(): JsonEditorMode {\n    return this.editor.getMode() as JsonEditorMode;\n  }\n\n  public getName(): string {\n    return this.editor.getName();\n  }\n\n  public getText(): string {\n    return this.editor.getText();\n  }\n\n  public set(json: JSON) {\n    this.editor.set(json);\n  }\n\n  public setMode(mode: JsonEditorMode) {\n    this.editor.setMode(mode);\n  }\n\n  public setName(name: string) {\n    this.editor.setName(name);\n  }\n\n  public setSelection(start, end) {\n    this.editor.setSelection(start, end);\n  }\n\n  public getSelection(): any {\n    return this.editor.getSelection();\n  }\n\n  public setSchema(schema: any) {\n    this.editor.setSchema(schema);\n  }\n\n  public setOptions(newOptions: JsonEditorOptions) {\n    if (this.editor) {\n      this.editor.destroy();\n    }\n    this.optionsChanged = true;\n    this.options = newOptions;\n    this.ngOnInit();\n  }\n\n  public destroy() {\n    this.editor.destroy();\n  }\n}\n\nexport type JsonEditorMode = 'tree' | 'view' | 'form' | 'code' | 'text';\n\nexport interface JsonEditorTreeNode {\n  field: String,\n  value: String,\n  path: String[]\n}\n\nexport class JsonEditorOptions {\n  public ace: any;\n  public ajv: Object;\n  public onChange: () => void;\n  public onEditable: (node: JsonEditorTreeNode | {}) => boolean | { field: boolean, value: boolean };\n  public onError: (error: any) => void;\n  public onModeChange: (newMode: JsonEditorMode, oldMode: JsonEditorMode) => void;\n  public escapeUnicode: boolean;\n  public sortObjectKeys: boolean;\n  public history: boolean;\n  public mode: JsonEditorMode;\n  public modes: JsonEditorMode[];\n  public name: String;\n  public schema: Object;\n  public search: boolean;\n  public indentation: Number;\n  public theme: Number;\n  public language: String;\n  public languages: Object;\n\n  /**\n   * Adds navigation bar to the menu - the navigation bar visualize the current position on\n   * the tree structure as well as allows breadcrumbs navigation.\n   * True by default.\n   * Only applicable when mode is 'tree', 'form' or 'view'.\n   */\n  public navigationBar: boolean;\n\n  /**\n   * Adds status bar to the bottom of the editor - the status bar shows the cursor position\n   * and a count of the selected characters.\n   * True by default.\n   * Only applicable when mode is 'code' or 'text'.\n   */\n  public statusBar: boolean;\n\n  constructor() {\n    this.escapeUnicode = false;\n    this.sortObjectKeys = false;\n    this.history = true;\n    this.mode = 'tree';\n    this.search = true;\n    this.indentation = 2;\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { JsonEditorComponent } from './jsoneditor/jsoneditor.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    JsonEditorComponent\n  ],\n  exports: [\n    JsonEditorComponent\n  ]\n})\nexport class NgJsonEditorModule {\n\n  public static forRoot(): ModuleWithProviders {\n\n    return {\n      ngModule: NgJsonEditorModule,\n      providers: [\n      ]\n    };\n  }\n}\n"],"names":[],"mappings":"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"}
