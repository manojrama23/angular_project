(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('jsoneditor'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('ang-jsoneditor', ['exports', '@angular/core', 'jsoneditor', '@angular/common'], factory) :
    (factory((global['ang-jsoneditor'] = {}),global.ng.core,null,global.ng.common));
}(this, (function (exports,core,editor,common) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var JsonEditorComponent = (function () {
        function JsonEditorComponent() {
            this.id = 'angjsoneditor' + Math.floor(Math.random() * 1000000);
            this.optionsChanged = false;
            this._data = {};
            this.options = new JsonEditorOptions();
        }
        Object.defineProperty(JsonEditorComponent.prototype, "data", {
            set: /**
             * @param {?} value
             * @return {?}
             */ function (value) {
                this._data = value;
                if (this.editor) {
                    this.editor.destroy();
                    this.ngOnInit();
                }
            },
            enumerable: true,
            configurable: true
        });
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                var /** @type {?} */ optionsBefore = this.options;
                if (!this.optionsChanged && this.editor) {
                    optionsBefore = this.editor.options;
                }
                this.editor = new editor(this.jsonEditorContainer.nativeElement, optionsBefore, this._data);
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.collapseAll = /**
         * @return {?}
         */
            function () {
                this.editor.collapseAll();
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.expandAll = /**
         * @return {?}
         */
            function () {
                this.editor.expandAll();
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.focus = /**
         * @return {?}
         */
            function () {
                this.editor.focus();
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.get = /**
         * @return {?}
         */
            function () {
                return this.editor.get();
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.getMode = /**
         * @return {?}
         */
            function () {
                return /** @type {?} */ (this.editor.getMode());
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.getName = /**
         * @return {?}
         */
            function () {
                return this.editor.getName();
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.getText = /**
         * @return {?}
         */
            function () {
                return this.editor.getText();
            };
        /**
         * @param {?} json
         * @return {?}
         */
        JsonEditorComponent.prototype.set = /**
         * @param {?} json
         * @return {?}
         */
            function (json) {
                this.editor.set(json);
            };
        /**
         * @param {?} mode
         * @return {?}
         */
        JsonEditorComponent.prototype.setMode = /**
         * @param {?} mode
         * @return {?}
         */
            function (mode) {
                this.editor.setMode(mode);
            };
        /**
         * @param {?} name
         * @return {?}
         */
        JsonEditorComponent.prototype.setName = /**
         * @param {?} name
         * @return {?}
         */
            function (name) {
                this.editor.setName(name);
            };
        /**
         * @param {?} start
         * @param {?} end
         * @return {?}
         */
        JsonEditorComponent.prototype.setSelection = /**
         * @param {?} start
         * @param {?} end
         * @return {?}
         */
            function (start, end) {
                this.editor.setSelection(start, end);
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.getSelection = /**
         * @return {?}
         */
            function () {
                return this.editor.getSelection();
            };
        /**
         * @param {?} schema
         * @return {?}
         */
        JsonEditorComponent.prototype.setSchema = /**
         * @param {?} schema
         * @return {?}
         */
            function (schema) {
                this.editor.setSchema(schema);
            };
        /**
         * @param {?} newOptions
         * @return {?}
         */
        JsonEditorComponent.prototype.setOptions = /**
         * @param {?} newOptions
         * @return {?}
         */
            function (newOptions) {
                if (this.editor) {
                    this.editor.destroy();
                }
                this.optionsChanged = true;
                this.options = newOptions;
                this.ngOnInit();
            };
        /**
         * @return {?}
         */
        JsonEditorComponent.prototype.destroy = /**
         * @return {?}
         */
            function () {
                this.editor.destroy();
            };
        JsonEditorComponent.decorators = [
            { type: core.Component, args: [{
                        // tslint:disable-next-line:component-selector
                        selector: 'json-editor',
                        template: '<div [id]="id" #jsonEditorContainer></div>'
                    },] },
        ];
        /** @nocollapse */
        JsonEditorComponent.ctorParameters = function () { return []; };
        JsonEditorComponent.propDecorators = {
            jsonEditorContainer: [{ type: core.ViewChild, args: ['jsonEditorContainer',] }],
            options: [{ type: core.Input }],
            data: [{ type: core.Input, args: ['data',] }]
        };
        return JsonEditorComponent;
    }());
    var JsonEditorOptions = (function () {
        function JsonEditorOptions() {
            this.escapeUnicode = false;
            this.sortObjectKeys = false;
            this.history = true;
            this.mode = 'tree';
            this.search = true;
            this.indentation = 2;
        }
        return JsonEditorOptions;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */
    var NgJsonEditorModule = (function () {
        function NgJsonEditorModule() {
        }
        /**
         * @return {?}
         */
        NgJsonEditorModule.forRoot = /**
         * @return {?}
         */
            function () {
                return {
                    ngModule: NgJsonEditorModule,
                    providers: []
                };
            };
        NgJsonEditorModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [
                            JsonEditorComponent
                        ],
                        exports: [
                            JsonEditorComponent
                        ]
                    },] },
        ];
        return NgJsonEditorModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes} checked by tsc
     */

    exports.NgJsonEditorModule = NgJsonEditorModule;
    exports.JsonEditorComponent = JsonEditorComponent;
    exports.JsonEditorOptions = JsonEditorOptions;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,